/* Generated By:JJTree: Do not edit this line. ASTMethod.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package AST;

public
class ASTMethod extends SimpleNode {
  public ASTMethod(int id) {
    super(id);
  }

  public ASTMethod(Parser p, int id) {
    super(p, id);
  }

  public String getMethodName() {
    for (Node n : this.children)
      if (n instanceof ASTName)
        return ((SimpleNode) n).getVal().toString();

    return "null";
  }

  public String getMethodType() {
    for (Node n : this.children)
      if (n instanceof ASTReturn) {
        return (((SimpleNode) ((SimpleNode) n).children[0]).getVal().toString());
      }

    return "null";
  }

  public ASTMethodParams getMethodParams() {
    for (Node n : this.children)
      if (n instanceof ASTMethodParams)
        return (ASTMethodParams) n;

    return null;
  }

  public ASTReturnStmt getMethodReturnStmt() {
    for (Node n : this.children)
      if (n instanceof ASTReturnStmt)
        return (ASTReturnStmt) n;

    return null;
  }

  /** Accept the visitor. **/
  public Object jjtAccept(ParserVisitor visitor, Object data) {

    return
    visitor.visit(this, data);
  }
}
/* JavaCC - OriginalChecksum=af40f8262962951c3df3630695161d70 (do not edit this line) */
